{"version":3,"sources":["components/clock/clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","timer","setState","console","log","this","timerInterval","setInterval","prevState","name","props","clearInterval","React","Component","App","isClockVisible","clockName","hideClock","showClock","randomName","Math","floor","random","handle","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4NAIaA,G,YAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAsBEC,MAAQ,WACN,EAAKC,SAAS,CAAEJ,MAAM,IAAIC,MAAOC,uBAGjCG,QAAQC,KAAK,IAAIL,MAAOC,uBA1B5B,uDAKE,WACEK,KAAKC,cAAgBC,YAAYF,KAAKJ,MAAO,OANjD,gCASE,SAAmBO,GACjB,IAAQC,EAASJ,KAAKK,MAAdD,KAEJD,EAAUC,OAASA,GAErBN,QAAQC,IAAR,qCAA0CI,EAAUC,KAApD,eAA+DA,MAdrE,kCAkBE,WACEE,cAAcN,KAAKC,iBAnBvB,oBA6BE,WACE,OACED,KAAKR,MAAMC,SA/BjB,GAA2Bc,IAAMC,YCoElBC,E,4MAnEbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKf,SAAS,CACZa,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKhB,SAAS,CACZa,gBAAgB,K,EAIpBI,WAAa,WACX,EAAKjB,SAAS,CACZc,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WACE,IAAMC,EAASlB,KAAKR,MAAMkB,eACtB,kBAAC,EAAD,CAAON,KAAMJ,KAAKR,MAAMmB,YAAgB,GAE5C,OACE,yBAAKQ,UAAU,SACb,wBAAIA,UAAU,gBAAd,gBAEG,IACD,0BAAMA,UAAU,QACZD,IAIN,yBAAKC,UAAU,kBACb,4BACEC,KAAK,SACLD,UAAU,oBACVE,QAASrB,KAAKY,WAHhB,QAQA,4BACEQ,KAAK,SACLD,UAAU,oBACVE,QAASrB,KAAKa,WAHhB,QAQA,4BACEO,KAAK,SACLD,UAAU,oBACVE,QAASrB,KAAKc,YAHhB,qB,GAvDQP,IAAMC,WCAxBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0e0214c8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './clock.scss';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerInterval = setInterval(this.timer, 1000);\n  }\n\n  componentDidUpdate(prevState) {\n    const { name } = this.props;\n\n    if (prevState.name !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevState.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerInterval);\n  }\n\n  timer = () => {\n    this.setState({ time: new Date().toLocaleTimeString() });\n\n    // eslint-disable-next-line\n    console.log( new Date().toLocaleTimeString());\n  }\n\n  render() {\n    return (\n      this.state.time\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock/clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  randomName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 100),\n    });\n  }\n\n  render() {\n    const handle = this.state.isClockVisible\n      ? <Clock name={this.state.clockName} /> : '';\n\n    return (\n      <div className=\"clock\">\n        <h1 className=\"clock__title\">\n          Current time:\n          {' '}\n          <span className=\"time\">\n            { handle }\n          </span>\n        </h1>\n\n        <div className=\"clock__buttons\">\n          <button\n            type=\"button\"\n            className=\"button buttonHide\"\n            onClick={this.hideClock}\n          >\n            hide\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button buttonShow\"\n            onClick={this.showClock}\n          >\n            show\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button randomName\"\n            onClick={this.randomName}\n          >\n            random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}